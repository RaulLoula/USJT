/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author bohrs
 */
import javax.swing.JOptionPane;
import javax.swing.DefaultComboBoxModel;

public class CursosTela extends javax.swing.JFrame {

    /**
     * Creates new form CursosTela
     */
    public CursosTela() {
        super ("Cursos");
        initComponents(); 
        buscarCursos(); 
        
        setLocationRelativeTo(null);
    }

    private void buscarCursos ()
    {
        try 
        {
            DAO dao = new DAO();
            Curso [] cursos = dao.obterCursos();
            cursosComboBox.setModel(new DefaultComboBoxModel<>(cursos));
        }
        catch (Exception e){
            JOptionPane.showMessageDialog(null, "Cursos indisponíveis, tente novamente mais tarde.");
            e.printStackTrace();
        }
    }    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cursosComboBox = new javax.swing.JComboBox();
        idCursoTextField = new javax.swing.JTextField();
        nomeCursoTextField = new javax.swing.JTextField();
        tipoCursoTextField = new javax.swing.JTextField();
        atualizarCursoButton = new javax.swing.JButton();
        adicionarCursoButton = new javax.swing.JButton();
        cancelarCursoButton = new javax.swing.JButton();
        removerCursoButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Gerenciamento de cursos"));

        cursosComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cursosComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cursosComboBoxActionPerformed(evt);
            }
        });

        idCursoTextField.setBorder(javax.swing.BorderFactory.createTitledBorder("Id"));

        nomeCursoTextField.setBorder(javax.swing.BorderFactory.createTitledBorder("Nome"));

        tipoCursoTextField.setBorder(javax.swing.BorderFactory.createTitledBorder("Tipo"));

        atualizarCursoButton.setText("Atualizar");
        atualizarCursoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizarCursoButtonActionPerformed(evt);
            }
        });

        adicionarCursoButton.setText("Novo");
        adicionarCursoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adicionarCursoButtonActionPerformed(evt);
            }
        });

        cancelarCursoButton.setText("Cancelar");
        cancelarCursoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarCursoButtonActionPerformed(evt);
            }
        });

        removerCursoButton.setText("Remover");
        removerCursoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerCursoButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cursosComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(idCursoTextField)
                    .addComponent(nomeCursoTextField)
                    .addComponent(tipoCursoTextField)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(adicionarCursoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(atualizarCursoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(removerCursoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelarCursoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(cursosComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(idCursoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(nomeCursoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tipoCursoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(atualizarCursoButton)
                    .addComponent(adicionarCursoButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cancelarCursoButton)
                    .addComponent(removerCursoButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void adicionarCursoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adicionarCursoButtonActionPerformed
        String nomeCurso = nomeCursoTextField.getText();
        String tipoCurso = tipoCursoTextField.getText();
        /*if (nomeCurso == null || nomeCurso.length() == 0 ||
            tipoCurso == null || tipoCurso.length() == 0)*/
        if (!this.ValidaCampos())
        {
            JOptionPane.showMessageDialog (null, "Preencha curso e tipo");
        }
        else
        {
            try
            {
                int escolha = JOptionPane.showConfirmDialog(null, "Confirmar cadastro de novo curso?");
                if (escolha == JOptionPane.YES_OPTION)
                {
                    Curso curso = new Curso (nomeCurso, tipoCurso);
                    DAO dao = new DAO();
                    dao.inserirCurso(curso);
                    JOptionPane.showMessageDialog(null, "Curso cadastrado com sucesso");
                    nomeCursoTextField.setText("");
                    tipoCursoTextField.setText("");
                    buscarCursos();
                }
            }
            catch (Exception e)
            {
                JOptionPane.showMessageDialog(null, "Falha técnica, tente mais tarde");
                e.printStackTrace();
            }        // TODO add your handling code here:
    }//GEN-LAST:event_adicionarCursoButtonActionPerformed
    }
    
    private boolean ValidaCampos()
    {
        String nomeCurso = nomeCursoTextField.getText();
        String tipoCurso = tipoCursoTextField.getText();
        if (  (nomeCurso == null || nomeCurso.length() == 0) ||
            (tipoCurso == null || tipoCurso.length() == 0) )
            return false;
        else
            return true;
    
    
    
    }
    private void cursosComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cursosComboBoxActionPerformed
        Curso curso = (Curso) cursosComboBox.getSelectedItem();
        idCursoTextField.setText(Integer.toString(curso.getId()));
        nomeCursoTextField.setText(curso.getNome());
        tipoCursoTextField.setText(curso.getTipo());    // TODO add your handling code here:
    }//GEN-LAST:event_cursosComboBoxActionPerformed

    private void atualizarCursoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizarCursoButtonActionPerformed
        int escolha = JOptionPane.showConfirmDialog(null, "Atualizar curso?");
        if (escolha == JOptionPane.YES_OPTION)
        {
            
        if (!this.ValidaCampos())
        {
            JOptionPane.showMessageDialog (null, "Selecione um curso antes de prosseguir.");
            return;
        }
            
            
            try
            {
                int id = Integer.parseInt (idCursoTextField.getText());
                String nome = nomeCursoTextField.getText();
                String tipo = tipoCursoTextField.getText();
                Curso curso = new Curso (id, nome, tipo);
                DAO dao = new DAO();
                dao.atualizarCurso(curso);
                JOptionPane.showMessageDialog(null, "Curso atualizado com sucesso");
                buscarCursos();
                idCursoTextField.setText("");
                nomeCursoTextField.setText("");
                tipoCursoTextField.setText("");
            }
            catch (Exception e)
            {
                JOptionPane.showMessageDialog(null, "Falha técnica. Tente novamente mais tarde.");
                e.printStackTrace();
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_atualizarCursoButtonActionPerformed

    private void removerCursoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerCursoButtonActionPerformed
        int escolha = JOptionPane.showConfirmDialog(null, "Remover curso?");
        if (escolha == JOptionPane.YES_OPTION)
        {
            if (!this.ValidaCampos())
            {
                JOptionPane.showMessageDialog (null, "Selecione um curso antes de prosseguir.");
                return;
            }
            
            
            
            try
            {
                int id = Integer.parseInt (idCursoTextField.getText());
                Curso curso = new Curso (id);
                DAO dao = new DAO();
                dao.removerCurso(curso);
                JOptionPane.showMessageDialog(null, "Curso removido com sucesso!");
                buscarCursos();
                nomeCursoTextField.setText("");
                tipoCursoTextField.setText("");
                idCursoTextField.setText("");
            }
            catch (Exception e)
            {
                JOptionPane.showMessageDialog(null, "Falha técnica. Tente novamente mais tarde.");
                e.printStackTrace();
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_removerCursoButtonActionPerformed

    private void cancelarCursoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarCursoButtonActionPerformed
        // TODO add your handling code here:
        DashboardTela dt = new DashboardTela();
        dt.setVisible(true);
        this.dispose();        
    }//GEN-LAST:event_cancelarCursoButtonActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CursosTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CursosTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CursosTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CursosTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CursosTela().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton adicionarCursoButton;
    private javax.swing.JButton atualizarCursoButton;
    private javax.swing.JButton cancelarCursoButton;
    private javax.swing.JComboBox cursosComboBox;
    private javax.swing.JTextField idCursoTextField;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField nomeCursoTextField;
    private javax.swing.JButton removerCursoButton;
    private javax.swing.JTextField tipoCursoTextField;
    // End of variables declaration//GEN-END:variables
}
